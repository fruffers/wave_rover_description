<?xml version="1.0"?>
<sdf version="1.9">
  <model name="wave_rover" canonical_link="base_link">
    <!-- Base Link -->
    <link name="base_link">
      <pose relative_to="__model__">0 0 0 0 0 0</pose>
      <inertial>
        <mass>5.0</mass>
        <inertia>
          <ixx>0.02</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.02</iyy>
          <iyz>0.0</iyz>
          <izz>0.02</izz>
        </inertia>
      </inertial>
      <visual name="base_visual">
        <pose>0 0 0.06 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/roverbody.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0.08 0.08 0.08 1.0</ambient>
          <diffuse>0.08 0.08 0.08 1.0</diffuse>
          <specular>0.05 0.05 0.05 1.0</specular>
        </material>
      </visual>
      <collision name="base_collision">
        <pose>0 0 0.04 0 0 0</pose>
        <geometry>
          <box>
            <size>0.1828 0.0753 0.0542</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </ode>
          </contact>
        </surface>
      </collision>

      <!-- Chassis IMU Sensor (integrated in rover electronics) -->
      <sensor name="chassis_imu" type="imu">
        <always_on>1</always_on>
        <update_rate>100</update_rate>  <!-- 100Hz for chassis IMU -->
        <visualize>0</visualize>
        <topic>imu</topic>
        <pose>0 0 0.02 0 0 0</pose>  <!-- Mounted in center of chassis -->
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.02</stddev>  <!-- Slightly more noise than camera IMU -->
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.01</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.02</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.01</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.02</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.01</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.03</stddev>  <!-- 0.03 m/sÂ² noise for chassis IMU -->
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.15</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.03</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.15</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.03</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.15</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>

    </link>

    <!-- Bracket Stand Link -->
    <link name="bracket_stand_link">
      <pose relative_to="base_link">0.0 0.0042 0.11 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>1e-5</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>1e-5</iyy>
          <iyz>0.0</iyz>
          <izz>1e-5</izz>
        </inertia>
      </inertial>
      <visual name="bracket_stand_visual">
        <geometry>
          <box>
            <size>0.045 0.11 0.04</size>
          </box>
        </geometry>
        <material>
          <diffuse>0.06 0.06 0.06 1.0</diffuse>
          <specular>0.03 0.03 0.03 1.0</specular>
        </material>
      </visual>
      <collision name="bracket_stand_collision">
        <geometry>
          <box>
            <size>0.045 0.11 0.04</size>
          </box>
        </geometry>
      </collision>
    </link>

    <!-- Bracket Stand Joint -->
    <joint name="bracket_stand_mount" type="fixed">
      <parent>base_link</parent>
      <child>bracket_stand_link</child>
      <pose>0.0 0.0042 0.11 0 0 0</pose>
    </joint>

    <!-- Camera Bracket Link -->
    <link name="camera_bracket_link">
      <pose relative_to="bracket_stand_link">0.0 -0.04 0.02 0 0 0</pose>
      <inertial>
        <mass>0.05</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0.0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
      <visual name="camera_bracket_visual">
        <geometry>
          <mesh>
            <uri>meshes/realsense_bracket.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.04 0.04 0.04 1.0</diffuse>
          <specular>0.02 0.02 0.02 1.0</specular>
        </material>
      </visual>
      <collision name="camera_bracket_collision">
        <geometry>
          <box>
            <size>0.02 0.08 0.02</size>
          </box>
        </geometry>
      </collision>
    </link>

    <!-- Camera Bracket Joint -->
    <joint name="bracket_mount" type="fixed">
      <parent>bracket_stand_link</parent>
      <child>camera_bracket_link</child>
      <pose>0.0 -0.04 0.02 0 0 0</pose>
    </joint>

    <!-- Camera Link -->
    <link name="camera_link">
      <pose relative_to="camera_bracket_link">0.0 -0.006 0.025 0.349 0 0</pose>
      <inertial>
        <mass>0.0615752</mass>
        <inertia>
          <ixx>9.108e-05</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.51e-06</iyy>
          <iyz>0</iyz>
          <izz>8.931e-05</izz>
        </inertia>
      </inertial>
      <collision name="camera_link_collision">
        <geometry>
          <box>
            <size>0.09 0.025 0.025</size>
          </box>
        </geometry>
      </collision>
    </link>

    <!-- Camera Mount Joint -->
    <joint name="camera_mount" type="fixed">
      <parent>camera_bracket_link</parent>
      <child>camera_link</child>
      <pose>0.0 -0.006 0.025 0.349 0 0</pose>
    </joint>

    <!-- Camera Sensor Link -->
    <link name="camera_sensor_link">
      <pose relative_to="camera_link">0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.0615752</mass>
        <inertia>
          <ixx>9.108e-05</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.51e-06</iyy>
          <iyz>0</iyz>
          <izz>8.931e-05</izz>
        </inertia>
      </inertial>
      <collision name="camera_sensor_collision">
        <geometry>
          <box>
            <size>0.09 0.025 0.025</size>
          </box>
        </geometry>
      </collision>
      <visual name="camera_sensor_visual">
        <geometry>
          <mesh>
            <uri>models/intel_realsense_d435/meshes/realsense.dae</uri>
            <submesh>
              <name>RealSense</name>
              <center>false</center>
            </submesh>
          </mesh>
        </geometry>
        <material>
          <diffuse>1.0 1.0 1.0 1.0</diffuse>
          <specular>1.0 1.0 1.0 1.0</specular>
          <pbr>
            <metal>
              <albedo_map>models/intel_realsense_d435/materials/textures/RealSense_Albedo.png</albedo_map>
              <normal_map>models/intel_realsense_d435/materials/textures/RealSense_Normal.png</normal_map>
              <metalness_map>models/intel_realsense_d435/materials/textures/RealSense_Metalness.png</metalness_map>
              <roughness_map>models/intel_realsense_d435/materials/textures/RealSense_Roughness.png</roughness_map>
            </metal>
          </pbr>
           <!-- fallback to script if no PBR support-->
          <script>
            <uri>models/intel_realsense_d435/materials/scripts/</uri>
            <uri>models/intel_realsense_d435/materials/textures/</uri>
            <name>UrbanTile/RealSense_Diffuse</name>
          </script>
        </material>
      </visual>

      <sensor name="d435_color" type="camera">
				<always_on>1</always_on>
				<update_rate>30</update_rate>
				<visualize>1</visualize>
				<pose>0 0 0 0 0 -1.5708</pose>
				<topic>camera/image_raw</topic>
				<camera name="d435">
					<horizontal_fov>1.21126</horizontal_fov>
					<image>
						<width>640</width>
						<height>480</height>
						<format>RGB_INT8</format>
					</image>
					<clip>
						<near>0.1</near>
						<far>100</far>
					</clip>
					<noise>
						<type>gaussian</type>
						<mean>0</mean>
						<stddev>0.007</stddev>
					</noise>
				</camera>
			</sensor>

      <sensor name="d435_depth" type="depth_camera">
				<always_on>1</always_on>
				<update_rate>90</update_rate>
				<visualize>0</visualize>
				<topic>camera/depth_image</topic>
				<pose>0 0 0 0 0 -1.5708</pose>
				<camera name="d435">
					<horizontal_fov>1.48702</horizontal_fov>
					<image>
						<width>1280</width>
						<height>720</height>
					</image>
					<clip>
						<near>0.1</near>
						<far>100</far>
					</clip>
					<noise>
						<type>gaussian</type>
						<mean>0</mean>
						<stddev>0.1</stddev>
					</noise>
				</camera>
			</sensor>

			<!-- RealSense D435i IMU Sensor -->
			<sensor name="d435i_imu" type="imu">
				<always_on>1</always_on>
				<update_rate>200</update_rate>  <!-- D435i IMU runs at 200Hz -->
				<visualize>0</visualize>
				<topic>camera/imu</topic>
				<pose>0 0 0 0 0 0</pose>  <!-- IMU is integrated into the camera -->
				<imu>
					<angular_velocity>
						<x>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.009</stddev>  <!-- 0.009 rad/s noise (realistic for D435i) -->
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.005</bias_stddev>
							</noise>
						</x>
						<y>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.009</stddev>
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.005</bias_stddev>
							</noise>
						</y>
						<z>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.009</stddev>
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.005</bias_stddev>
							</noise>
						</z>
					</angular_velocity>
					<linear_acceleration>
						<x>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.017</stddev>  <!-- 0.017 m/sÂ² noise (realistic for D435i) -->
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.1</bias_stddev>
							</noise>
						</x>
						<y>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.017</stddev>
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.1</bias_stddev>
							</noise>
						</y>
						<z>
							<noise type="gaussian">
								<mean>0.0</mean>
								<stddev>0.017</stddev>
								<bias_mean>0.0</bias_mean>
								<bias_stddev>0.1</bias_stddev>
							</noise>
						</z>
					</linear_acceleration>
				</imu>
			</sensor>

			<!-- RealSense D435 Point Cloud Sensor (as 3D LIDAR) -->
			<sensor name="d435_points" type="gpu_lidar">
        <pose relative_to='camera_link'>0 0 0 0 0 -1.5708</pose>  <!-- Match camera rotation: -90Â° around Z-axis -->
				<lidar>
					<scan>
						<horizontal>
							<samples>80</samples>  <!-- Reduced for good performance while maintaining detail -->
							<resolution>1</resolution>
							<min_angle>-0.759218</min_angle>  <!-- -43.5Â° (half of 87Â° FOV) -->
							<max_angle>0.759218</max_angle>   <!-- +43.5Â° (half of 87Â° FOV) -->
						</horizontal>
						<vertical>
							<samples>60</samples>  <!-- Reduced for good performance while maintaining detail -->
							<resolution>1</resolution>
							<min_angle>-0.349066</min_angle>  <!-- -20Â° (half of ~40Â° vertical FOV) -->
							<max_angle>0.349066</max_angle>   <!-- +20Â° (half of ~40Â° vertical FOV) -->
						</vertical>
					</scan>
					<range>
						<min>0.105</min>  <!-- D435 minimum range -->
						<max>10.0</max>   <!-- D435 maximum range -->
						<resolution>0.01</resolution>
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0</mean>
						<stddev>0.01</stddev>
					</noise>
				</lidar>
        <gz_frame_id>camera_link</gz_frame_id>
        <always_on>1</always_on>
				<update_rate>15</update_rate>  <!-- Reduced from 30Hz to improve performance -->
				<visualize>1</visualize>
				<topic>camera/points</topic>
			</sensor>

    </link>

    <!-- Camera Sensor Joint -->
    <joint name="camera_sensor_joint" type="fixed">
      <parent>camera_link</parent>
      <child>camera_sensor_link</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Camera Optical Link -->
    <link name="camera_link_optical">
      <pose relative_to="camera_sensor_link">0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>1e-8</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>1e-8</iyy>
          <iyz>0.0</iyz>
          <izz>1e-8</izz>
        </inertia>
      </inertial>

      
    </link>

    <!-- Camera Optical Joint -->
    <joint name="camera_optical_joint" type="fixed">
      <parent>camera_sensor_link</parent>
      <child>camera_link_optical</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Front Left Wheel -->
    <link name="front_left_wheel">
      <pose relative_to="base_link">-0.061 -0.050 0.04 0 0 0</pose>
      <inertial>
        <mass>0.451</mass>
        <inertia>
          <ixx>0.000395</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.000395</iyy>
          <iyz>0.0</iyz>
          <izz>0.000361</izz>
        </inertia>
      </inertial>
      <collision name="front_left_wheel_collision">
        <pose>0 0 0 1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.042</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="front_left_wheel_visual">
        <pose>0 0 0 1.570795 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/leftside_wheel.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.02 0.02 0.02 1.0</diffuse>
          <specular>0.01 0.01 0.01 1.0</specular>
        </material>
      </visual>
    </link>

    <!-- Front Left Wheel Joint -->
    <joint name="front_left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_left_wheel</child>
      <pose>-0.061 -0.050 0.04 0 0 0</pose>
      <axis>
        <xyz expressed_in="__model__">1 0 0</xyz>
        <dynamics>
          <damping>1.0</damping>
          <friction>1.0</friction>
        </dynamics>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
          <effort>10.0</effort>
          <velocity>10.0</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Front Right Wheel -->
    <link name="front_right_wheel">
      <pose relative_to="base_link">0.061 -0.050 0.04 0 0 0</pose>
      <inertial>
        <mass>0.451</mass>
        <inertia>
          <ixx>0.000395</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.000395</iyy>
          <iyz>0.0</iyz>
          <izz>0.000361</izz>
        </inertia>
      </inertial>
      <collision name="front_right_wheel_collision">
        <pose>0 0 0 1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.042</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="front_right_wheel_visual">
        <pose>0 0 0 1.570795 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/rightside_wheel.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.02 0.02 0.02 1.0</diffuse>
          <specular>0.01 0.01 0.01 1.0</specular>
        </material>
      </visual>
    </link>

    <!-- Front Right Wheel Joint -->
    <joint name="front_right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_right_wheel</child>
      <pose>0.061 -0.050 0.04 0 0 0</pose>
      <axis>
        <xyz expressed_in="__model__">1 0 0</xyz>
        <dynamics>
          <damping>1.0</damping>
          <friction>1.0</friction>
        </dynamics>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
          <effort>10.0</effort>
          <velocity>10.0</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Back Left Wheel -->
    <link name="back_left_wheel">
      <pose relative_to="base_link">-0.061 0.050 0.04 0 0 0</pose>
      <inertial>
        <mass>0.451</mass>
        <inertia>
          <ixx>0.000395</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.000395</iyy>
          <iyz>0.0</iyz>
          <izz>0.000361</izz>
        </inertia>
      </inertial>
      <collision name="back_left_wheel_collision">
        <pose>0 0 0 1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.042</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="back_left_wheel_visual">
        <pose>0 0 0 1.570795 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/leftside_wheel.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.02 0.02 0.02 1.0</diffuse>
          <specular>0.01 0.01 0.01 1.0</specular>
        </material>
      </visual>
    </link>

    <!-- Back Left Wheel Joint -->
    <joint name="back_left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>back_left_wheel</child>
      <pose>-0.061 0.050 0.04 0 0 0</pose>
      <axis>
        <xyz expressed_in="__model__">1 0 0</xyz>
        <dynamics>
          <damping>1.0</damping>
          <friction>1.0</friction>
        </dynamics>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
          <effort>10.0</effort>
          <velocity>10.0</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Back Right Wheel -->
    <link name="back_right_wheel">
      <pose relative_to="base_link">0.061 0.050 0.04 0 0 0</pose>
      <inertial>
        <mass>0.451</mass>
        <inertia>
          <ixx>0.000395</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.000395</iyy>
          <iyz>0.0</iyz>
          <izz>0.000361</izz>
        </inertia>
      </inertial>
        
      <collision name="back_right_wheel_collision">
        <pose>0 0 0 1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.042</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="back_right_wheel_visual">
        <pose>0 0 0 1.570795 0 0</pose>
        <geometry>
          <mesh>
            <uri>meshes/rightside_wheel.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.02 0.02 0.02 1.0</diffuse>
          <specular>0.01 0.01 0.01 1.0</specular>
        </material>
      </visual>
    </link>

    <!-- Back Right Wheel Joint -->
    <joint name="back_right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>back_right_wheel</child>
      <pose>0.061 0.050 0.04 0 0 0</pose>
      <axis>
        <xyz expressed_in="__model__">1 0 0</xyz>
        <dynamics>
          <damping>1.0</damping>
          <friction>1.0</friction>
        </dynamics>
        <limit>
          <lower>-1000</lower>
          <upper>1000</upper>
          <effort>10.0</effort>
          <velocity>10.0</velocity>
        </limit>
      </axis>
    </joint>

    <!-- Differential Drive Plugin -->
    <plugin filename="libgz-sim-diff-drive-system.so" name="gz::sim::systems::DiffDrive">
      <left_joint>front_left_wheel_joint</left_joint>
      <left_joint>back_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      <right_joint>back_right_wheel_joint</right_joint>
      <wheel_separation>0.1</wheel_separation>
      <wheel_radius>0.04</wheel_radius>
      <odom_publish_frequency>1</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <tf_topic>tf</tf_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
    </plugin>

    <!-- Joint State Publisher Plugin -->
    <plugin filename="libgz-sim-joint-state-publisher-system.so" name="gz::sim::systems::JointStatePublisher">
      <joint_name>front_left_wheel_joint</joint_name>
      <joint_name>front_right_wheel_joint</joint_name>
      <joint_name>back_left_wheel_joint</joint_name>
      <joint_name>back_right_wheel_joint</joint_name>
      <topic>joint_states</topic>
      <update_rate>50</update_rate>
    </plugin>

    <!-- Pose Publisher Plugin -->
    <plugin filename="libgz-sim-pose-publisher-system.so" name="gz::sim::systems::PosePublisher">
      <publish_link_pose>true</publish_link_pose>
      <publish_collision_pose>false</publish_collision_pose>
      <publish_visual_pose>false</publish_visual_pose>
      <use_pose_vector_msg>true</use_pose_vector_msg>
      <static_publisher>true</static_publisher>
      <static_update_frequency>1</static_update_frequency>
    </plugin>

  </model>
</sdf>
