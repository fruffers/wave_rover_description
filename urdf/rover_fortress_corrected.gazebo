<?xml version="1.0"?>

<robot>
 <gazebo reference="base_link">
 <mu1>0.2</mu1>
 <mu2>0.2</mu2>
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="bracket_stand_link">
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="camera_bracket_link">
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="camera_link">
 <material>Gazebo/Silver</material>
 </gazebo>
 
 <gazebo reference="front_left_wheel">
 <mu1>0.2</mu1>
 <mu2>0.2</mu2>
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="front_right_wheel">
 <mu1>0.2</mu1>
 <mu2>0.2</mu2>
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="back_left_wheel">
 <mu1>0.2</mu1>
 <mu2>0.2</mu2>
 <material>Gazebo/Black</material>
 </gazebo>
 
 <gazebo reference="back_right_wheel">
 <mu1>0.2</mu1>
 <mu2>0.2</mu2>
 <material>Gazebo/Black</material>
 </gazebo>
 
   <!-- Camera sensor for Gazebo Fortress -->
   <gazebo reference="camera_sensor_link">
    <sensor name="camera" type="rgbd_camera">
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>5.0</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="ignition-gazebo-sensors-system">
        <ignition_frame_id>camera_link_optical</ignition_frame_id>
        <ros>
          <namespace>/camera</namespace>
          <remapping>~/image:=image_raw</remapping>
          <remapping>~/depth_image:=depth/image_raw</remapping>
          <remapping>~/camera_info:=camera_info</remapping>
          <remapping>~/points:=depth/points</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>
 
     <!-- Diff Drive Plugin for Gazebo Fortress -->
    <gazebo>
	    <plugin name="ignition::gazebo::systems::DiffDrive" filename="ignition-gazebo-diff-drive-system">
	      <ros>
		<namespace>wave_rover</namespace>
	      </ros>
	      
	      <left_joint>front_left_wheel_joint</left_joint>
	      <left_joint>back_left_wheel_joint</left_joint>

	      <right_joint>front_right_wheel_joint</right_joint>
	      <right_joint>back_right_wheel_joint</right_joint>
	      
	      <wheel_separation>${base_link_y_dim+wheel_length}</wheel_separation>
 	      <wheel_radius>${wheel_radius}</wheel_radius>
 	      <max_linear_acceleration>1.0</max_linear_acceleration>
 	      <max_angular_acceleration>2.0</max_angular_acceleration>
 	      <max_linear_velocity>0.5</max_linear_velocity>
 	      <max_angular_velocity>1.0</max_angular_velocity>
	      
	      <topic>cmd_vel</topic>
	      <odom_topic>odom</odom_topic>
	      <frame_id>odom</frame_id>
	      <child_frame_id>base_link</child_frame_id>
	      
	      <odom_publisher_frequency>50</odom_publisher_frequency>
	    </plugin>	
    </gazebo>

  <!-- Joint State Publisher Plugin for Gazebo Fortress -->
  <gazebo>
    <plugin name="ignition::gazebo::systems::JointStatePublisher" filename="ignition-gazebo-joint-state-publisher-system">
      <ros>
        <namespace>wave_rover</namespace>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>50</update_rate>
    </plugin>
  </gazebo>

  <!-- Pose Publisher Plugin for Gazebo Fortress -->
  <gazebo>
    <plugin name="ignition::gazebo::systems::PosePublisher" filename="ignition-gazebo-pose-publisher-system">
      <ros>
        <namespace>wave_rover</namespace>
        <remapping>~/out:=pose</remapping>
      </ros>
      <publish_link_pose>true</publish_link_pose>
      <publish_collision_pose>false</publish_collision_pose>
      <publish_visual_pose>false</publish_visual_pose>
      <use_pose_vector_msg>true</use_pose_vector_msg>
      <static_publisher>true</static_publisher>
      <static_update_frequency>1</static_update_frequency>
    </plugin>
  </gazebo>
 
</robot>
